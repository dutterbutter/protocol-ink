{
  "source": {
    "hash": "0xda0fb62cb2e650a9063f2151ab963fccc9682f4b1e8e59d5f3fcc4d718daea69",
    "language": "ink! 3.0.1",
    "compiler": "rustc 1.62.0-nightly"
  },
  "contract": {
    "name": "governed_token_wrapper",
    "version": "1.6.1",
    "authors": [
      "Webb Developers"
    ]
  },
  "V3": {
    "spec": {
      "constructors": [
        {
          "args": [
            {
              "label": "name",
              "type": {
                "displayName": [
                  "Option"
                ],
                "type": 13
              }
            },
            {
              "label": "symbol",
              "type": {
                "displayName": [
                  "Option"
                ],
                "type": 13
              }
            },
            {
              "label": "decimal",
              "type": {
                "displayName": [
                  "u8"
                ],
                "type": 4
              }
            },
            {
              "label": "governor",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 2
              }
            },
            {
              "label": "fee_recipient",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 2
              }
            },
            {
              "label": "fee_percentage",
              "type": {
                "displayName": [
                  "Balance"
                ],
                "type": 0
              }
            },
            {
              "label": "is_native_allowed",
              "type": {
                "displayName": [
                  "bool"
                ],
                "type": 10
              }
            },
            {
              "label": "wrapping_limit",
              "type": {
                "displayName": [
                  "Balance"
                ],
                "type": 0
              }
            },
            {
              "label": "proposal_nonce",
              "type": {
                "displayName": [
                  "u64"
                ],
                "type": 11
              }
            },
            {
              "label": "total_supply",
              "type": {
                "displayName": [
                  "Balance"
                ],
                "type": 0
              }
            }
          ],
          "docs": [
            "Initializes the contract",
            "",
            "# Arguments",
            "* `name` - The contract's token name",
            "* `symbol` - The contract's token symbol",
            "* `decimal` - The contract's decimal value",
            "* `governor` - The contract's governor",
            "* `fee_recipient` - The contract's fee recipient address",
            "* `fee_percentage` - The contract's fee percentage",
            "* `is_native_allowed` - Determines if the contract should allow native token wrapping",
            "* `wrapping_limit` - The contract's wrapping limit",
            "* `proposal_nonce` - The nonce used for adding/removing token address"
          ],
          "label": "new",
          "payable": false,
          "selector": "0x9bae9d5e"
        }
      ],
      "docs": [],
      "events": [
        {
          "args": [
            {
              "docs": [],
              "indexed": true,
              "label": "sender",
              "type": {
                "displayName": [
                  "Option"
                ],
                "type": 16
              }
            },
            {
              "docs": [],
              "indexed": true,
              "label": "mint_for",
              "type": {
                "displayName": [
                  "Option"
                ],
                "type": 16
              }
            },
            {
              "docs": [],
              "indexed": false,
              "label": "amount",
              "type": {
                "displayName": [
                  "Balance"
                ],
                "type": 0
              }
            }
          ],
          "docs": [],
          "label": "Wrap"
        }
      ],
      "messages": [
        {
          "args": [
            {
              "label": "token_address",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 2
              }
            },
            {
              "label": "amount",
              "type": {
                "displayName": [
                  "Balance"
                ],
                "type": 0
              }
            }
          ],
          "docs": [
            " Used to wrap tokens on behalf of a sender.",
            "",
            " * `token_address` - The address of PSP22 to wrap into, if token_address is None,",
            " then it's a Native token address",
            " * `amount` - The amount of token to transfer"
          ],
          "label": "wrap",
          "mutates": true,
          "payable": true,
          "returnType": {
            "displayName": [
              "Result"
            ],
            "type": 14
          },
          "selector": "0xa6cfd678"
        },
        {
          "args": [
            {
              "label": "token_address",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 2
              }
            },
            {
              "label": "amount",
              "type": {
                "displayName": [
                  "Balance"
                ],
                "type": 0
              }
            }
          ],
          "docs": [
            " Used to unwrap/burn the wrapper token on behalf of a sender.",
            "",
            " * `token_address` -  The optional address of PSP22 to unwrap into, if token_address is None,",
            " then it's a Native token address",
            " * `amount` -  The the amount of token to transfer"
          ],
          "label": "unwrap",
          "mutates": true,
          "payable": true,
          "returnType": {
            "displayName": [
              "Result"
            ],
            "type": 14
          },
          "selector": "0x67a449d0"
        },
        {
          "args": [
            {
              "label": "token_address",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 2
              }
            },
            {
              "label": "amount",
              "type": {
                "displayName": [
                  "Balance"
                ],
                "type": 0
              }
            },
            {
              "label": "recipient",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 2
              }
            }
          ],
          "docs": [
            " Used to unwrap/burn the wrapper token on behalf of a sender.",
            "",
            " * `token_address` - is the optional address of PSP22 to unwrap into,",
            " * `amount` - is the amount of tokens to burn",
            " * `recipient` is the address to transfer to"
          ],
          "label": "unwrap_and_send_to",
          "mutates": true,
          "payable": true,
          "returnType": {
            "displayName": [
              "Result"
            ],
            "type": 14
          },
          "selector": "0xefcc4b23"
        },
        {
          "args": [
            {
              "label": "token_address",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 2
              }
            },
            {
              "label": "sender",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 2
              }
            },
            {
              "label": "amount",
              "type": {
                "displayName": [
                  "Balance"
                ],
                "type": 0
              }
            }
          ],
          "docs": [
            " Used to wrap tokens on behalf of a sender",
            "",
            " * `token_address` - is the optional Account id of PSP22 to wrap into,",
            " * `amount` - is the amount of tokens to transfer",
            " * `sender` -  is the Account id of sender where assets are sent from."
          ],
          "label": "wrap_for",
          "mutates": true,
          "payable": true,
          "returnType": {
            "displayName": [
              "Result"
            ],
            "type": 14
          },
          "selector": "0xb31c2ace"
        },
        {
          "args": [
            {
              "label": "token_address",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 2
              }
            },
            {
              "label": "sender",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 2
              }
            },
            {
              "label": "amount",
              "type": {
                "displayName": [
                  "Balance"
                ],
                "type": 0
              }
            },
            {
              "label": "recipient",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 2
              }
            }
          ],
          "docs": [
            " Used to wrap tokens on behalf of a sender and mint to a potentially different address",
            "",
            " * `token_address` - is the optional address of PSP22 to wrap into,",
            " * `sender` - is Address of sender where assets are sent from.",
            " * `amount` - is the amount of tokens to transfer",
            " * `recipient` - is the recipient of the wrapped tokens."
          ],
          "label": "wrap_for_and_send_to",
          "mutates": true,
          "payable": true,
          "returnType": {
            "displayName": [
              "Result"
            ],
            "type": 14
          },
          "selector": "0xd0fb6da5"
        },
        {
          "args": [
            {
              "label": "token_address",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 2
              }
            },
            {
              "label": "amount",
              "type": {
                "displayName": [
                  "Balance"
                ],
                "type": 0
              }
            },
            {
              "label": "sender",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 2
              }
            }
          ],
          "docs": [
            " Used to unwrap/burn the wrapper token on behalf of a sender.",
            "",
            " * `token_address` - is the optional address of PSP22 to unwrap into, if token_address is None,",
            "  then it's a Native token address",
            " * `amount` - is the amount of token to transfer",
            " * `sender` - is the Address of sender where liquidity is send to."
          ],
          "label": "unwrap_for",
          "mutates": true,
          "payable": true,
          "returnType": {
            "displayName": [
              "Result"
            ],
            "type": 14
          },
          "selector": "0x7b85ec78"
        },
        {
          "args": [
            {
              "label": "token_address",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 2
              }
            },
            {
              "label": "nonce",
              "type": {
                "displayName": [
                  "u64"
                ],
                "type": 11
              }
            }
          ],
          "docs": [
            " Adds a token at `token_address` to the GovernedTokenWrapper's wrapping list",
            "",
            " * `token_address` - The address of the token to be added",
            " * `nonce` -  The nonce tracking updates to this contract"
          ],
          "label": "add_token_address",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "Result"
            ],
            "type": 14
          },
          "selector": "0xecb1bef9"
        },
        {
          "args": [
            {
              "label": "token_address",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 2
              }
            },
            {
              "label": "nonce",
              "type": {
                "displayName": [
                  "u64"
                ],
                "type": 11
              }
            }
          ],
          "docs": [
            " Removes a token at `token_address` from the GovernedTokenWrapper's wrapping list",
            "",
            " * `token_address`:  The address of the token to be added",
            " * `nonce`: The nonce tracking updates to this contract"
          ],
          "label": "remove_token_address",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "Result"
            ],
            "type": 14
          },
          "selector": "0x2688302c"
        },
        {
          "args": [
            {
              "label": "governor",
              "type": {
                "displayName": [
                  "Option"
                ],
                "type": 16
              }
            },
            {
              "label": "is_native_allowed",
              "type": {
                "displayName": [
                  "Option"
                ],
                "type": 17
              }
            },
            {
              "label": "wrapping_limit",
              "type": {
                "displayName": [
                  "Option"
                ],
                "type": 18
              }
            },
            {
              "label": "fee_percentage",
              "type": {
                "displayName": [
                  "Option"
                ],
                "type": 18
              }
            },
            {
              "label": "fee_recipient",
              "type": {
                "displayName": [
                  "Option"
                ],
                "type": 16
              }
            }
          ],
          "docs": [
            " Updates contract configs",
            "",
            " * `governor` - Sets the contract's governor",
            " * `is_native_allowed` - Determines if the contract should allow native token wrapping",
            " * `wrapping_limit` - Sets the contract's wrapping limit",
            " * `fee_percentage` - Sets the contract's fee percentage",
            " * `fee_recipient` - Sets the contract's fee recipient address"
          ],
          "label": "update_config",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "Result"
            ],
            "type": 14
          },
          "selector": "0xed3c9313"
        },
        {
          "args": [],
          "docs": [
            " Returns the `governor` value."
          ],
          "label": "governor",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "AccountId"
            ],
            "type": 2
          },
          "selector": "0x41bc5e26"
        },
        {
          "args": [],
          "docs": [
            " Returns the `is_native_allowed` value."
          ],
          "label": "is_native_allowed",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "bool"
            ],
            "type": 10
          },
          "selector": "0xc0a283e9"
        },
        {
          "args": [],
          "docs": [
            " Returns the `wrapping_limit` value."
          ],
          "label": "wrapping_limit",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "u128"
            ],
            "type": 0
          },
          "selector": "0x08030ffc"
        },
        {
          "args": [],
          "docs": [
            " Returns the `fee_percentage` value."
          ],
          "label": "fee_percentage",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "Balance"
            ],
            "type": 0
          },
          "selector": "0x135c0a04"
        },
        {
          "args": [],
          "docs": [
            " Returns the `fee_recipient` value."
          ],
          "label": "fee_recipient",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "AccountId"
            ],
            "type": 2
          },
          "selector": "0x828999b7"
        },
        {
          "args": [],
          "docs": [
            " Returns the token `name` ."
          ],
          "label": "name",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "Option"
            ],
            "type": 13
          },
          "selector": "0x3adaf70d"
        },
        {
          "args": [],
          "docs": [
            " Returns the `proposal_nonce` value."
          ],
          "label": "nonce",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "u64"
            ],
            "type": 11
          },
          "selector": "0x607e603d"
        },
        {
          "args": [
            {
              "label": "token_address",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 2
              }
            }
          ],
          "docs": [
            " Checks if a token_address is a valid one.",
            "",
            " * `token_address` - The address to check"
          ],
          "label": "is_valid_token_address",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "bool"
            ],
            "type": 10
          },
          "selector": "0xce7ed435"
        },
        {
          "args": [],
          "docs": [
            " Returns total psp22 token supply"
          ],
          "label": "total_supply",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "Balance"
            ],
            "type": 0
          },
          "selector": "0xdb6375a8"
        },
        {
          "args": [
            {
              "label": "address",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 2
              }
            }
          ],
          "docs": [
            " Returns psp22 balance for an address",
            "",
            " * `address` - The address to check"
          ],
          "label": "psp22_balance",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "Balance"
            ],
            "type": 0
          },
          "selector": "0x3bf304ee"
        },
        {
          "args": [
            {
              "label": "amount",
              "type": {
                "displayName": [
                  "Balance"
                ],
                "type": 0
              }
            }
          ],
          "docs": [
            " Updates psp22 contract balance",
            "",
            " * `amount` - the amount"
          ],
          "label": "update_psp22_contract_balance",
          "mutates": true,
          "payable": false,
          "returnType": null,
          "selector": "0xe0b1244c"
        },
        {
          "args": [
            {
              "label": "amount",
              "type": {
                "displayName": [
                  "Balance"
                ],
                "type": 0
              }
            }
          ],
          "docs": [
            " Transfers psp22 token to contract",
            "",
            " * `amount` - the amount"
          ],
          "label": "transfer_psp22_to_contract",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "Result"
            ],
            "type": 14
          },
          "selector": "0x75b36146"
        },
        {
          "args": [],
          "docs": [
            " Returns contract psp22 balance"
          ],
          "label": "psp22_contract_balance",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "Balance"
            ],
            "type": 0
          },
          "selector": "0x56c0436f"
        },
        {
          "args": [],
          "docs": [
            " Returns native contract balance"
          ],
          "label": "native_contract_balance",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "Balance"
            ],
            "type": 0
          },
          "selector": "0x2d440df1"
        },
        {
          "args": [],
          "docs": [
            " Returns native contract address"
          ],
          "label": "native_contract_account_id",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "Option"
            ],
            "type": 16
          },
          "selector": "0x6e7aa52a"
        },
        {
          "args": [
            {
              "label": "spender",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 2
              }
            },
            {
              "label": "amount",
              "type": {
                "displayName": [
                  "Balance"
                ],
                "type": 0
              }
            }
          ],
          "docs": [
            " sets the psp22 allowance for the spender(spend on behalf of owner)"
          ],
          "label": "set_psp22_allowance",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "Result"
            ],
            "type": 14
          },
          "selector": "0x0c5c7439"
        },
        {
          "args": [
            {
              "label": "owner",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 2
              }
            },
            {
              "label": "spender",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 2
              }
            },
            {
              "label": "amount",
              "type": {
                "displayName": [
                  "Balance"
                ],
                "type": 0
              }
            }
          ],
          "docs": [
            " sets the psp22 allowance for the spender(spend on behalf of owner)",
            "",
            " * `owner` - owner's address",
            " * `spender` - spender's address",
            " * `amount` - amount to spend"
          ],
          "label": "set_psp22_allowance_for_owner",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "Result"
            ],
            "type": 14
          },
          "selector": "0xe6cbf102"
        },
        {
          "args": [
            {
              "label": "owner",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 2
              }
            },
            {
              "label": "spender",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 2
              }
            }
          ],
          "docs": [
            " Gets the psp22 allowance for the spender(spend on behalf of owner)",
            "",
            " * `owner` - owner's address",
            " * `spender` - spender's address"
          ],
          "label": "get_psp22_allowance",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "Balance"
            ],
            "type": 0
          },
          "selector": "0x9adbcf5b"
        },
        {
          "args": [],
          "docs": [
            " Returns the zero address represented by the contract"
          ],
          "label": "get_zero_address",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "AccountId"
            ],
            "type": 2
          },
          "selector": "0x9d70c964"
        },
        {
          "args": [
            {
              "label": "account_id",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 2
              }
            },
            {
              "label": "amount",
              "type": {
                "displayName": [
                  "Balance"
                ],
                "type": 0
              }
            }
          ],
          "docs": [
            " Transfer's psp22 token to an address",
            "",
            " * `account_id` - address to transfer to",
            " * `amount` - amount to transfer"
          ],
          "label": "transfer_psp22",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "Result"
            ],
            "type": 14
          },
          "selector": "0x5873aba9"
        },
        {
          "args": [
            {
              "label": "account_id",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 2
              }
            },
            {
              "label": "amount",
              "type": {
                "displayName": [
                  "Balance"
                ],
                "type": 0
              }
            }
          ],
          "docs": [
            " Transfer's native token to an address",
            "",
            " * `account_id` - address to transfer to",
            " * `amount` - amount to transfer"
          ],
          "label": "transfer_native",
          "mutates": true,
          "payable": true,
          "returnType": {
            "displayName": [
              "Result"
            ],
            "type": 14
          },
          "selector": "0x31208c3b"
        },
        {
          "args": [
            {
              "label": "account_id",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 2
              }
            },
            {
              "label": "amount",
              "type": {
                "displayName": [
                  "Balance"
                ],
                "type": 0
              }
            }
          ],
          "docs": [
            " Insert's psp22 token for an address",
            "",
            " * `account_id` - address to transfer to",
            " * `amount` - amount to transfer"
          ],
          "label": "insert_psp22_balance",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "Result"
            ],
            "type": 14
          },
          "selector": "0x3aa28419"
        },
        {
          "args": [
            {
              "label": "from",
              "type": {
                "displayName": [
                  "psp22_external",
                  "TransferFromInput1"
                ],
                "type": 2
              }
            },
            {
              "label": "to",
              "type": {
                "displayName": [
                  "psp22_external",
                  "TransferFromInput2"
                ],
                "type": 2
              }
            },
            {
              "label": "value",
              "type": {
                "displayName": [
                  "psp22_external",
                  "TransferFromInput3"
                ],
                "type": 0
              }
            },
            {
              "label": "data",
              "type": {
                "displayName": [
                  "psp22_external",
                  "TransferFromInput4"
                ],
                "type": 19
              }
            }
          ],
          "docs": [],
          "label": "PSP22::transfer_from",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "psp22_external",
              "TransferFromOutput"
            ],
            "type": 20
          },
          "selector": "0x54b3c76e"
        },
        {
          "args": [
            {
              "label": "to",
              "type": {
                "displayName": [
                  "psp22_external",
                  "TransferInput1"
                ],
                "type": 2
              }
            },
            {
              "label": "value",
              "type": {
                "displayName": [
                  "psp22_external",
                  "TransferInput2"
                ],
                "type": 0
              }
            },
            {
              "label": "data",
              "type": {
                "displayName": [
                  "psp22_external",
                  "TransferInput3"
                ],
                "type": 19
              }
            }
          ],
          "docs": [],
          "label": "PSP22::transfer",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "psp22_external",
              "TransferOutput"
            ],
            "type": 20
          },
          "selector": "0xdb20f9f5"
        },
        {
          "args": [],
          "docs": [],
          "label": "PSP22::total_supply",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "psp22_external",
              "TotalSupplyOutput"
            ],
            "type": 0
          },
          "selector": "0x162df8c2"
        },
        {
          "args": [
            {
              "label": "owner",
              "type": {
                "displayName": [
                  "psp22_external",
                  "BalanceOfInput1"
                ],
                "type": 2
              }
            }
          ],
          "docs": [],
          "label": "PSP22::balance_of",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "psp22_external",
              "BalanceOfOutput"
            ],
            "type": 0
          },
          "selector": "0x6568382f"
        },
        {
          "args": [
            {
              "label": "owner",
              "type": {
                "displayName": [
                  "psp22_external",
                  "AllowanceInput1"
                ],
                "type": 2
              }
            },
            {
              "label": "spender",
              "type": {
                "displayName": [
                  "psp22_external",
                  "AllowanceInput2"
                ],
                "type": 2
              }
            }
          ],
          "docs": [],
          "label": "PSP22::allowance",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "psp22_external",
              "AllowanceOutput"
            ],
            "type": 0
          },
          "selector": "0x4d47d921"
        },
        {
          "args": [
            {
              "label": "spender",
              "type": {
                "displayName": [
                  "psp22_external",
                  "ApproveInput1"
                ],
                "type": 2
              }
            },
            {
              "label": "value",
              "type": {
                "displayName": [
                  "psp22_external",
                  "ApproveInput2"
                ],
                "type": 0
              }
            }
          ],
          "docs": [],
          "label": "PSP22::approve",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "psp22_external",
              "ApproveOutput"
            ],
            "type": 20
          },
          "selector": "0xb20f1bbd"
        },
        {
          "args": [
            {
              "label": "spender",
              "type": {
                "displayName": [
                  "psp22_external",
                  "IncreaseAllowanceInput1"
                ],
                "type": 2
              }
            },
            {
              "label": "delta_value",
              "type": {
                "displayName": [
                  "psp22_external",
                  "IncreaseAllowanceInput2"
                ],
                "type": 0
              }
            }
          ],
          "docs": [],
          "label": "PSP22::increase_allowance",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "psp22_external",
              "IncreaseAllowanceOutput"
            ],
            "type": 20
          },
          "selector": "0x96d6b57a"
        },
        {
          "args": [
            {
              "label": "spender",
              "type": {
                "displayName": [
                  "psp22_external",
                  "DecreaseAllowanceInput1"
                ],
                "type": 2
              }
            },
            {
              "label": "delta_value",
              "type": {
                "displayName": [
                  "psp22_external",
                  "DecreaseAllowanceInput2"
                ],
                "type": 0
              }
            }
          ],
          "docs": [],
          "label": "PSP22::decrease_allowance",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "psp22_external",
              "DecreaseAllowanceOutput"
            ],
            "type": 20
          },
          "selector": "0xfecb57d5"
        },
        {
          "args": [],
          "docs": [],
          "label": "PSP22Metadata::token_decimals",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "psp22metadata_external",
              "TokenDecimalsOutput"
            ],
            "type": 4
          },
          "selector": "0x7271b782"
        },
        {
          "args": [],
          "docs": [],
          "label": "PSP22Metadata::token_name",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "psp22metadata_external",
              "TokenNameOutput"
            ],
            "type": 13
          },
          "selector": "0x3d261bd4"
        },
        {
          "args": [],
          "docs": [],
          "label": "PSP22Metadata::token_symbol",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "psp22metadata_external",
              "TokenSymbolOutput"
            ],
            "type": 13
          },
          "selector": "0x34205be5"
        },
        {
          "args": [
            {
              "label": "account",
              "type": {
                "displayName": [
                  "psp22mintable_external",
                  "MintInput1"
                ],
                "type": 2
              }
            },
            {
              "label": "amount",
              "type": {
                "displayName": [
                  "psp22mintable_external",
                  "MintInput2"
                ],
                "type": 0
              }
            }
          ],
          "docs": [],
          "label": "PSP22Mintable::mint",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "psp22mintable_external",
              "MintOutput"
            ],
            "type": 20
          },
          "selector": "0xfc3c75d4"
        },
        {
          "args": [
            {
              "label": "account",
              "type": {
                "displayName": [
                  "psp22wrapper_external",
                  "DepositForInput1"
                ],
                "type": 2
              }
            },
            {
              "label": "amount",
              "type": {
                "displayName": [
                  "psp22wrapper_external",
                  "DepositForInput2"
                ],
                "type": 0
              }
            }
          ],
          "docs": [],
          "label": "PSP22Wrapper::deposit_for",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "psp22wrapper_external",
              "DepositForOutput"
            ],
            "type": 20
          },
          "selector": "0x4ce2ea83"
        },
        {
          "args": [
            {
              "label": "account",
              "type": {
                "displayName": [
                  "psp22wrapper_external",
                  "WithdrawToInput1"
                ],
                "type": 2
              }
            },
            {
              "label": "amount",
              "type": {
                "displayName": [
                  "psp22wrapper_external",
                  "WithdrawToInput2"
                ],
                "type": 0
              }
            }
          ],
          "docs": [],
          "label": "PSP22Wrapper::withdraw_to",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "psp22wrapper_external",
              "WithdrawToOutput"
            ],
            "type": 20
          },
          "selector": "0xbae15da6"
        },
        {
          "args": [
            {
              "label": "account",
              "type": {
                "displayName": [
                  "psp22burnable_external",
                  "BurnInput1"
                ],
                "type": 2
              }
            },
            {
              "label": "amount",
              "type": {
                "displayName": [
                  "psp22burnable_external",
                  "BurnInput2"
                ],
                "type": 0
              }
            }
          ],
          "docs": [],
          "label": "PSP22Burnable::burn",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "psp22burnable_external",
              "BurnOutput"
            ],
            "type": 20
          },
          "selector": "0x7a9da510"
        }
      ]
    },
    "storage": {
      "struct": {
        "fields": [
          {
            "layout": {
              "struct": {
                "fields": [
                  {
                    "layout": {
                      "cell": {
                        "key": "0x56d8879b05a90b526146e14a5a336f2bf7780a87cf24a56cb99e23848733ecb5",
                        "ty": 0
                      }
                    },
                    "name": "supply"
                  },
                  {
                    "layout": {
                      "cell": {
                        "key": "0x57d8879b05a90b526146e14a5a336f2bf7780a87cf24a56cb99e23848733ecb5",
                        "ty": 1
                      }
                    },
                    "name": "balances"
                  },
                  {
                    "layout": {
                      "cell": {
                        "key": "0x58d8879b05a90b526146e14a5a336f2bf7780a87cf24a56cb99e23848733ecb5",
                        "ty": 6
                      }
                    },
                    "name": "allowances"
                  },
                  {
                    "layout": {
                      "enum": {
                        "dispatchKey": "0x59d8879b05a90b526146e14a5a336f2bf7780a87cf24a56cb99e23848733ecb5",
                        "variants": {
                          "0": {
                            "fields": [
                              {
                                "layout": {
                                  "cell": {
                                    "key": "0x5ad8879b05a90b526146e14a5a336f2bf7780a87cf24a56cb99e23848733ecb5",
                                    "ty": 8
                                  }
                                },
                                "name": null
                              }
                            ]
                          },
                          "1": {
                            "fields": []
                          }
                        }
                      }
                    },
                    "name": "_reserved"
                  }
                ]
              }
            },
            "name": "psp22"
          },
          {
            "layout": {
              "struct": {
                "fields": [
                  {
                    "layout": {
                      "enum": {
                        "dispatchKey": "0x29723d2f4a57a73dce57e08bc088aefda372122c141995bd51f4d8c879646c86",
                        "variants": {
                          "0": {
                            "fields": [
                              {
                                "layout": {
                                  "cell": {
                                    "key": "0x2a723d2f4a57a73dce57e08bc088aefda372122c141995bd51f4d8c879646c86",
                                    "ty": 9
                                  }
                                },
                                "name": null
                              }
                            ]
                          },
                          "1": {
                            "fields": []
                          }
                        }
                      }
                    },
                    "name": "name"
                  },
                  {
                    "layout": {
                      "enum": {
                        "dispatchKey": "0x2a723d2f4a57a73dce57e08bc088aefda372122c141995bd51f4d8c879646c86",
                        "variants": {
                          "0": {
                            "fields": [
                              {
                                "layout": {
                                  "cell": {
                                    "key": "0x2b723d2f4a57a73dce57e08bc088aefda372122c141995bd51f4d8c879646c86",
                                    "ty": 9
                                  }
                                },
                                "name": null
                              }
                            ]
                          },
                          "1": {
                            "fields": []
                          }
                        }
                      }
                    },
                    "name": "symbol"
                  },
                  {
                    "layout": {
                      "cell": {
                        "key": "0x2b723d2f4a57a73dce57e08bc088aefda372122c141995bd51f4d8c879646c86",
                        "ty": 4
                      }
                    },
                    "name": "decimals"
                  },
                  {
                    "layout": {
                      "enum": {
                        "dispatchKey": "0x2c723d2f4a57a73dce57e08bc088aefda372122c141995bd51f4d8c879646c86",
                        "variants": {
                          "0": {
                            "fields": [
                              {
                                "layout": {
                                  "cell": {
                                    "key": "0x2d723d2f4a57a73dce57e08bc088aefda372122c141995bd51f4d8c879646c86",
                                    "ty": 8
                                  }
                                },
                                "name": null
                              }
                            ]
                          },
                          "1": {
                            "fields": []
                          }
                        }
                      }
                    },
                    "name": "_reserved"
                  }
                ]
              }
            },
            "name": "metadata"
          },
          {
            "layout": {
              "struct": {
                "fields": [
                  {
                    "layout": {
                      "cell": {
                        "key": "0xcc40c3a49faeffa3c6b2db8c45dc5f2e1f85c995bdba30121c4dff15fcf6d663",
                        "ty": 2
                      }
                    },
                    "name": "underlying"
                  },
                  {
                    "layout": {
                      "enum": {
                        "dispatchKey": "0xcd40c3a49faeffa3c6b2db8c45dc5f2e1f85c995bdba30121c4dff15fcf6d663",
                        "variants": {
                          "0": {
                            "fields": [
                              {
                                "layout": {
                                  "cell": {
                                    "key": "0xce40c3a49faeffa3c6b2db8c45dc5f2e1f85c995bdba30121c4dff15fcf6d663",
                                    "ty": 8
                                  }
                                },
                                "name": null
                              }
                            ]
                          },
                          "1": {
                            "fields": []
                          }
                        }
                      }
                    },
                    "name": "_reserved"
                  }
                ]
              }
            },
            "name": "wrapper"
          },
          {
            "layout": {
              "cell": {
                "key": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "ty": 2
              }
            },
            "name": "governor"
          },
          {
            "layout": {
              "cell": {
                "key": "0x0100000000000000000000000000000000000000000000000000000000000000",
                "ty": 2
              }
            },
            "name": "fee_recipient"
          },
          {
            "layout": {
              "cell": {
                "key": "0x0200000000000000000000000000000000000000000000000000000000000000",
                "ty": 0
              }
            },
            "name": "fee_percentage"
          },
          {
            "layout": {
              "cell": {
                "key": "0x0300000000000000000000000000000000000000000000000000000000000000",
                "ty": 10
              }
            },
            "name": "is_native_allowed"
          },
          {
            "layout": {
              "cell": {
                "key": "0x0400000000000000000000000000000000000000000000000000000000000000",
                "ty": 0
              }
            },
            "name": "wrapping_limit"
          },
          {
            "layout": {
              "cell": {
                "key": "0x0500000000000000000000000000000000000000000000000000000000000000",
                "ty": 11
              }
            },
            "name": "proposal_nonce"
          },
          {
            "layout": {
              "cell": {
                "key": "0x0600000000000000000000000000000000000000000000000000000000000000",
                "ty": 12
              }
            },
            "name": "tokens"
          },
          {
            "layout": {
              "cell": {
                "key": "0x0700000000000000000000000000000000000000000000000000000000000000",
                "ty": 12
              }
            },
            "name": "historical_tokens"
          },
          {
            "layout": {
              "cell": {
                "key": "0x0800000000000000000000000000000000000000000000000000000000000000",
                "ty": 12
              }
            },
            "name": "valid"
          },
          {
            "layout": {
              "cell": {
                "key": "0x0900000000000000000000000000000000000000000000000000000000000000",
                "ty": 12
              }
            },
            "name": "historically_valid"
          }
        ]
      }
    },
    "types": [
      {
        "id": 0,
        "type": {
          "def": {
            "primitive": "u128"
          }
        }
      },
      {
        "id": 1,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "offset_key",
                  "type": 5,
                  "typeName": "Key"
                }
              ]
            }
          },
          "params": [
            {
              "name": "K",
              "type": 2
            },
            {
              "name": "V",
              "type": 0
            }
          ],
          "path": [
            "ink_storage",
            "lazy",
            "mapping",
            "Mapping"
          ]
        }
      },
      {
        "id": 2,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "type": 3,
                  "typeName": "[u8; 32]"
                }
              ]
            }
          },
          "path": [
            "ink_env",
            "types",
            "AccountId"
          ]
        }
      },
      {
        "id": 3,
        "type": {
          "def": {
            "array": {
              "len": 32,
              "type": 4
            }
          }
        }
      },
      {
        "id": 4,
        "type": {
          "def": {
            "primitive": "u8"
          }
        }
      },
      {
        "id": 5,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "type": 3,
                  "typeName": "[u8; 32]"
                }
              ]
            }
          },
          "path": [
            "ink_primitives",
            "Key"
          ]
        }
      },
      {
        "id": 6,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "offset_key",
                  "type": 5,
                  "typeName": "Key"
                }
              ]
            }
          },
          "params": [
            {
              "name": "K",
              "type": 7
            },
            {
              "name": "V",
              "type": 0
            }
          ],
          "path": [
            "ink_storage",
            "lazy",
            "mapping",
            "Mapping"
          ]
        }
      },
      {
        "id": 7,
        "type": {
          "def": {
            "tuple": [
              2,
              2
            ]
          }
        }
      },
      {
        "id": 8,
        "type": {
          "def": {
            "tuple": []
          }
        }
      },
      {
        "id": 9,
        "type": {
          "def": {
            "primitive": "str"
          }
        }
      },
      {
        "id": 10,
        "type": {
          "def": {
            "primitive": "bool"
          }
        }
      },
      {
        "id": 11,
        "type": {
          "def": {
            "primitive": "u64"
          }
        }
      },
      {
        "id": 12,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "offset_key",
                  "type": 5,
                  "typeName": "Key"
                }
              ]
            }
          },
          "params": [
            {
              "name": "K",
              "type": 2
            },
            {
              "name": "V",
              "type": 10
            }
          ],
          "path": [
            "ink_storage",
            "lazy",
            "mapping",
            "Mapping"
          ]
        }
      },
      {
        "id": 13,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "index": 0,
                  "name": "None"
                },
                {
                  "fields": [
                    {
                      "type": 9
                    }
                  ],
                  "index": 1,
                  "name": "Some"
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 9
            }
          ],
          "path": [
            "Option"
          ]
        }
      },
      {
        "id": 14,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "fields": [
                    {
                      "type": 8
                    }
                  ],
                  "index": 0,
                  "name": "Ok"
                },
                {
                  "fields": [
                    {
                      "type": 15
                    }
                  ],
                  "index": 1,
                  "name": "Err"
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 8
            },
            {
              "name": "E",
              "type": 15
            }
          ],
          "path": [
            "Result"
          ]
        }
      },
      {
        "id": 15,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "index": 0,
                  "name": "InvalidAmountForNativeWrapping"
                },
                {
                  "index": 1,
                  "name": "NativeWrappingNotAllowed"
                },
                {
                  "index": 2,
                  "name": "InvalidValueSentForWrapping"
                },
                {
                  "index": 3,
                  "name": "InvalidTokenAddress"
                },
                {
                  "index": 4,
                  "name": "TokenAddressAlreadyExists"
                },
                {
                  "index": 5,
                  "name": "InvalidTokenAmount"
                },
                {
                  "index": 6,
                  "name": "InsufficientNativeBalance"
                },
                {
                  "index": 7,
                  "name": "NativeUnwrappingNotAllowed"
                },
                {
                  "index": 8,
                  "name": "InsufficientPSP22Balance"
                },
                {
                  "index": 9,
                  "name": "InvalidHistoricalTokenAddress"
                },
                {
                  "index": 10,
                  "name": "Unauthorize"
                },
                {
                  "index": 11,
                  "name": "InvalidNonce"
                },
                {
                  "index": 12,
                  "name": "NonceMustIncrementByOne"
                },
                {
                  "index": 13,
                  "name": "TransferError"
                },
                {
                  "index": 14,
                  "name": "TokenMintError"
                },
                {
                  "index": 15,
                  "name": "TokenBurnError"
                },
                {
                  "index": 16,
                  "name": "PSP22AllowanceError"
                }
              ]
            }
          },
          "path": [
            "governed_token_wrapper",
            "governed_token_wrapper",
            "Error"
          ]
        }
      },
      {
        "id": 16,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "index": 0,
                  "name": "None"
                },
                {
                  "fields": [
                    {
                      "type": 2
                    }
                  ],
                  "index": 1,
                  "name": "Some"
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 2
            }
          ],
          "path": [
            "Option"
          ]
        }
      },
      {
        "id": 17,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "index": 0,
                  "name": "None"
                },
                {
                  "fields": [
                    {
                      "type": 10
                    }
                  ],
                  "index": 1,
                  "name": "Some"
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 10
            }
          ],
          "path": [
            "Option"
          ]
        }
      },
      {
        "id": 18,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "index": 0,
                  "name": "None"
                },
                {
                  "fields": [
                    {
                      "type": 0
                    }
                  ],
                  "index": 1,
                  "name": "Some"
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 0
            }
          ],
          "path": [
            "Option"
          ]
        }
      },
      {
        "id": 19,
        "type": {
          "def": {
            "sequence": {
              "type": 4
            }
          }
        }
      },
      {
        "id": 20,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "fields": [
                    {
                      "type": 8
                    }
                  ],
                  "index": 0,
                  "name": "Ok"
                },
                {
                  "fields": [
                    {
                      "type": 21
                    }
                  ],
                  "index": 1,
                  "name": "Err"
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 8
            },
            {
              "name": "E",
              "type": 21
            }
          ],
          "path": [
            "Result"
          ]
        }
      },
      {
        "id": 21,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "fields": [
                    {
                      "type": 9,
                      "typeName": "String"
                    }
                  ],
                  "index": 0,
                  "name": "Custom"
                },
                {
                  "index": 1,
                  "name": "InsufficientBalance"
                },
                {
                  "index": 2,
                  "name": "InsufficientAllowance"
                },
                {
                  "index": 3,
                  "name": "ZeroRecipientAddress"
                },
                {
                  "index": 4,
                  "name": "ZeroSenderAddress"
                },
                {
                  "fields": [
                    {
                      "type": 9,
                      "typeName": "String"
                    }
                  ],
                  "index": 5,
                  "name": "SafeTransferCheckFailed"
                }
              ]
            }
          },
          "path": [
            "contracts",
            "traits",
            "errors",
            "psp22",
            "PSP22Error"
          ]
        }
      }
    ]
  }
}
